#BlueJ class context
comment0.target=Action
comment0.text=\n\ Classe\ abstrata\ que\ define\ a\ estrutura\ da\ funcionalidade\ de\ uma\ a\u00E7\u00E3o\n\n\ @author\ Erik\n\ @version\ 1.0.0\n
comment1.params=name\ executionNeeded\ tamagotchi
comment1.target=Action(java.lang.String,\ boolean,\ Tamagotchi)
comment1.text=\n\ M\u00E9todo\ construtor\n
comment2.params=alreadyExecuted
comment2.target=void\ setAlreadyExecuted(boolean)
comment2.text=\n\ Metodo\ de\ acesso\ alreadyExecuted\n
comment3.params=
comment3.target=boolean\ isAlreadyExecuted()
comment3.text=\n\ Metodo\ de\ acesso\ alreadyExecuted\n
comment4.params=
comment4.target=boolean\ isExecutionNeeded()
comment4.text=\n\ Metodo\ de\ acesso\ executionNeeded\n
comment5.params=executionNeeded
comment5.target=void\ setExecutionNeeded(boolean)
comment5.text=\n\ Metodo\ de\ acesso\ executionNeeded\n
comment6.params=
comment6.target=void\ executeImpl()
comment6.text=\n\ m\u00E9todo\ abstrato\ contendo\ a\ implementa\u00E7\u00E3o\ da\ a\u00E7\u00E3o\n
comment7.params=
comment7.target=void\ execute()
comment7.text=\n\ M\u00E9todo\ chamado\ para\ executar\ a\ a\u00E7\u00E3o.\n\ Al\u00E9m\ de\ utilizar\ a\ implementa\u00E7\u00E3o\ da\ subclasse\ seta\ a\ flag\ alreadyExecuted.\n\ Caso\ ja\ tenha\ sido\ alreadyExecuted,\ o\ m\u00E9todo\ retorna\ sem\ fazer\ nada.\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\n\ retorna\ o\ name\ da\ a\u00E7\u00E3o\n\n\ @return\ actionName\n
numComments=9
